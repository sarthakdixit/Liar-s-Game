{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as React from 'react';\nexport default function useEventEmitter(listen) {\n  var listenRef = React.useRef(listen);\n  React.useEffect(function () {\n    listenRef.current = listen;\n  });\n  var listeners = React.useRef(Object.create(null));\n  var create = React.useCallback(function (target) {\n    var removeListener = function removeListener(type, callback) {\n      var callbacks = listeners.current[type] ? listeners.current[type][target] : undefined;\n\n      if (!callbacks) {\n        return;\n      }\n\n      var index = callbacks.indexOf(callback);\n\n      if (index > -1) {\n        callbacks.splice(index, 1);\n      }\n    };\n\n    var addListener = function addListener(type, callback) {\n      listeners.current[type] = listeners.current[type] || {};\n      listeners.current[type][target] = listeners.current[type][target] || [];\n      listeners.current[type][target].push(callback);\n      var removed = false;\n      return function () {\n        if (!removed) {\n          removed = true;\n          removeListener(type, callback);\n        }\n      };\n    };\n\n    return {\n      addListener: addListener,\n      removeListener: removeListener\n    };\n  }, []);\n  var emit = React.useCallback(function (_ref) {\n    var _ref2;\n\n    var _items$target, _listenRef$current;\n\n    var type = _ref.type,\n        data = _ref.data,\n        target = _ref.target,\n        canPreventDefault = _ref.canPreventDefault;\n    var items = listeners.current[type] || {};\n    var callbacks = target !== undefined ? (_items$target = items[target]) === null || _items$target === void 0 ? void 0 : _items$target.slice() : (_ref2 = []).concat.apply(_ref2, _toConsumableArray(Object.keys(items).map(function (t) {\n      return items[t];\n    }))).filter(function (cb, i, self) {\n      return self.lastIndexOf(cb) === i;\n    });\n    var event = {\n      get type() {\n        return type;\n      }\n\n    };\n\n    if (target !== undefined) {\n      Object.defineProperty(event, 'target', {\n        enumerable: true,\n        get: function get() {\n          return target;\n        }\n      });\n    }\n\n    if (data !== undefined) {\n      Object.defineProperty(event, 'data', {\n        enumerable: true,\n        get: function get() {\n          return data;\n        }\n      });\n    }\n\n    if (canPreventDefault) {\n      var defaultPrevented = false;\n      Object.defineProperties(event, {\n        defaultPrevented: {\n          enumerable: true,\n          get: function get() {\n            return defaultPrevented;\n          }\n        },\n        preventDefault: {\n          enumerable: true,\n          value: function value() {\n            defaultPrevented = true;\n          }\n        }\n      });\n    }\n\n    (_listenRef$current = listenRef.current) === null || _listenRef$current === void 0 ? void 0 : _listenRef$current.call(listenRef, event);\n    callbacks === null || callbacks === void 0 ? void 0 : callbacks.forEach(function (cb) {\n      return cb(event);\n    });\n    return event;\n  }, []);\n  return React.useMemo(function () {\n    return {\n      create: create,\n      emit: emit\n    };\n  }, [create, emit]);\n}","map":{"version":3,"sources":["useEventEmitter.tsx"],"names":["listenRef","React","listeners","Object","create","target","removeListener","callbacks","index","addListener","removed","emit","canPreventDefault","items","t","self","event","enumerable","get","data","defaultPrevented","preventDefault","value","cb"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport type { EventArg, EventConsumer, EventEmitter } from './types';\n\nexport type NavigationEventEmitter<T extends Record<string, any>> =\n  EventEmitter<T> & {\n    create: (target: string) => EventConsumer<T>;\n  };\n\ntype Listeners = ((e: any) => void)[];\n\n/**\n * Hook to manage the event system used by the navigator to notify screens of various events.\n */\nexport default function useEventEmitter<T extends Record<string, any>>(\n  listen?: (e: any) => void\n): NavigationEventEmitter<T> {\n  const listenRef = React.useRef(listen);\n\n  React.useEffect(() => {\n    listenRef.current = listen;\n  });\n\n  const listeners = React.useRef<Record<string, Record<string, Listeners>>>(\n    Object.create(null)\n  );\n\n  const create = React.useCallback((target: string) => {\n    const removeListener = (type: string, callback: (data: any) => void) => {\n      const callbacks = listeners.current[type]\n        ? listeners.current[type][target]\n        : undefined;\n\n      if (!callbacks) {\n        return;\n      }\n\n      const index = callbacks.indexOf(callback);\n\n      if (index > -1) {\n        callbacks.splice(index, 1);\n      }\n    };\n\n    const addListener = (type: string, callback: (data: any) => void) => {\n      listeners.current[type] = listeners.current[type] || {};\n      listeners.current[type][target] = listeners.current[type][target] || [];\n      listeners.current[type][target].push(callback);\n\n      let removed = false;\n      return () => {\n        // Prevent removing other listeners when unsubscribing same listener multiple times\n        if (!removed) {\n          removed = true;\n          removeListener(type, callback);\n        }\n      };\n    };\n\n    return {\n      addListener,\n      removeListener,\n    };\n  }, []);\n\n  const emit = React.useCallback(\n    ({\n      type,\n      data,\n      target,\n      canPreventDefault,\n    }: {\n      type: string;\n      data?: any;\n      target?: string;\n      canPreventDefault?: boolean;\n    }) => {\n      const items = listeners.current[type] || {};\n\n      // Copy the current list of callbacks in case they are mutated during execution\n      const callbacks =\n        target !== undefined\n          ? items[target]?.slice()\n          : ([] as Listeners)\n              .concat(...Object.keys(items).map((t) => items[t]))\n              .filter((cb, i, self) => self.lastIndexOf(cb) === i);\n\n      const event: EventArg<any, any, any> = {\n        get type() {\n          return type;\n        },\n      };\n\n      if (target !== undefined) {\n        Object.defineProperty(event, 'target', {\n          enumerable: true,\n          get() {\n            return target;\n          },\n        });\n      }\n\n      if (data !== undefined) {\n        Object.defineProperty(event, 'data', {\n          enumerable: true,\n          get() {\n            return data;\n          },\n        });\n      }\n\n      if (canPreventDefault) {\n        let defaultPrevented = false;\n\n        Object.defineProperties(event, {\n          defaultPrevented: {\n            enumerable: true,\n            get() {\n              return defaultPrevented;\n            },\n          },\n          preventDefault: {\n            enumerable: true,\n            value() {\n              defaultPrevented = true;\n            },\n          },\n        });\n      }\n\n      listenRef.current?.(event);\n\n      callbacks?.forEach((cb) => cb(event));\n\n      return event as any;\n    },\n    []\n  );\n\n  return React.useMemo(() => ({ create, emit }), [create, emit]);\n}\n"]},"metadata":{},"sourceType":"module"}